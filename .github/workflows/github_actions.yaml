name: Flutter Build & Deploy

on:
  push:
    branches:
      - main 
  workflow_dispatch:  

jobs:
  build_and_deploy:
    name: Build & Deploy to Firebase App Distribution
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Java
      uses: actions/setup-java@v2
      with:
        distribution: 'zulu'
        java-version: '11'

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.22.1'

    - name: Install dependencies
      run: flutter pub get
    
    - name: Set API_KEY environment variable
      env:
        API_KEY: ${{ secrets.API_KEY }}
      run: |
        echo "API_KEY=$API_KEY" >> $GITHUB_ENV

    - name: Create google-services.json
      run: |
        echo '${{ secrets.GOOGLE_SERVICES_JSON }}' > android/app/google-services.json

    - name: Build APK
      run: |
        flutter build apk --release

    - name: Upload APK
      uses: actions/upload-artifact@v2
      with:
        name: apk
        path: build/app/outputs/flutter-apk/app-release.apk

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '19'

    - name: Install Firebase CLI
      run: npm install -g firebase-tools

    - name: Set up Google Cloud Credentials
      env:
        GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}
      run: |
        echo "$GOOGLE_SERVICES_JSON" > google-application-credentials.json
        echo "GOOGLE_SERVICE=google-application-credentials.json" >> $GITHUB_ENV

    - name: Verify and Deploy APK
      env:
        FIREBASE_TOKEN: ${{secrets.FIREBASE_TOKEN}}
      run: |
        echo "APK files:"
        ls -l build/app/outputs/flutter-apk/
        
        if [ -f "build/app/outputs/flutter-apk/app-release.apk" ]; then
          echo "APK found, checking size..."
          ls -lh build/app/outputs/flutter-apk/app-release.apk
          
          echo "Deploying to Firebase App Distribution..."
          firebase appdistribution:distribute build/app/outputs/flutter-apk/app-release.apk \
            --app "${{ secrets.FIREBASE_APP_ID }}" \
            --groups "testers" \
            --release-notes "New version for testing"
        else
          echo "APK not found!"
          exit 1
        fi