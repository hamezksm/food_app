name: Flutter Build & Deploy

on:
  push:
    branches:
      - main 
  workflow_dispatch:  

jobs:
  build_and_deploy:
    name: Build & Deploy to Firebase App Distribution
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Java
      uses: actions/setup-java@v2
      with:
        distribution: 'zulu'
        java-version: '11'

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.10.0'  # Adjust to your Flutter version

    - name: Install dependencies
      run: flutter pub get

    - name: Build APK
      run: |
        flutter build apk --release \
        --no-shrink \
        --target-platform android-arm,android-arm64,android-x64 \
        --split-per-abi
      
    - name: Upload APKs
      uses: actions/upload-artifact@v2
      with:
        name: apks
        path: build/app/outputs/flutter-apk/*.apk

    - name: Set up Firebase CLI
      run: |
        npm install -g firebase-tools
        firebase --version

    - name: Deploy to Firebase App Distribution
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
      run: |
        firebase appdistribution:distribute build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk \
          --app $FIREBASE_APP_ID \
          --token $FIREBASE_TOKEN \
          --groups "testers" \
          --release-notes "New version available for testing"

        firebase appdistribution:distribute build/app/outputs/flutter-apk/app-arm64-v8a-release.apk \
          --app $FIREBASE_APP_ID \
          --token $FIREBASE_TOKEN \
          --groups "testers" \
          --release-notes "New version available for testing"

        firebase appdistribution:distribute build/app/outputs/flutter-apk/app-x86_64-release.apk \
          --app $FIREBASE_APP_ID \
          --token $FIREBASE_TOKEN \
          --groups "testers" \
          --release-notes "New version available for testing"