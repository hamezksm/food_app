name: Flutter Build & Deploy

on:
  push:
    branches:
      - main 
  workflow_dispatch:  

jobs:
  build_and_deploy:
    name: Build & Deploy to Firebase App Distribution
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Java
      uses: actions/setup-java@v2
      with:
        distribution: 'zulu'
        java-version: '11'

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.22.1'

    - name: Install dependencies
      run: flutter pub get
    
    - name: Set API_KEY environment variable
      env:
        API_KEY: ${{ secrets.API_KEY }}
      run: |
        echo "API_KEY=$API_KEY" >> $GITHUB_ENV

    - name: Build APK
      run: |
        flutter build apk --release \
        --no-shrink \
        --target-platform android-arm,android-arm64,android-x64 \
        --split-per-abi
      
    - name: Upload APKs
      uses: actions/upload-artifact@v2
      with:
        name: apks
        path: build/app/outputs/flutter-apk/*.apk

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '19'

    - name: Install Firebase CLI
      run: npm install -g firebase-tools

    - name: List APK Files
      run: ls -l build/app/outputs/flutter-apk/

    
    - name: Deploy to Firebase App Distribution
      env:
        FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
        PROJECT_ID: ${{ secrets.PROJECT_ID }}
        PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
        CLIENT_EMAIL: ${{ secrets.CLIENT_EMAIL }}
        FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
        GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/firebase-service-account.json
      run: |
       # Create the service account JSON file
        echo '{
          "type": "service_account",
          "project_id": "'"$PROJECT_ID"'",
          "private_key": "'"$PRIVATE_KEY"'",
          "client_email": "'"$CLIENT_EMAIL"'",
          "token_uri": "https://oauth2.googleapis.com/token",
          "auth_uri": "https://accounts.google.com/o/oauth2/auth",
          "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs"
        }' > ${{ github.workspace }}/firebase-service-account.json

        # Double-check the content of the file (BE CAREFUL NOT TO EXPOSE THIS IN PUBLIC LOGS)
        # cat ${{ github.workspace }}/firebase-service-account.json

        # Use the service account JSON for authentication
        export GOOGLE_APPLICATION_CREDENTIALS="${{ github.workspace }}/firebase-service-account.json"

        # Distribute APKs
        firebase appdistribution:distribute \
          --app "$FIREBASE_APP_ID" \
          --groups "testers" \
          --release-notes "New version available for testing" \
          build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk 

        firebase appdistribution:distribute \
          --app "$FIREBASE_APP_ID" \
          --groups "testers" \
          --release-notes "New version available for testing" \
          build/app/outputs/flutter-apk/app-arm64-v8a-release.apk

        firebase appdistribution:distribute \
          --app "$FIREBASE_APP_ID" \
          --groups "testers" \
          --release-notes "New version available for testing" \
          "/build/app/outputs/flutter-apk/app-x86_64-release.apk"